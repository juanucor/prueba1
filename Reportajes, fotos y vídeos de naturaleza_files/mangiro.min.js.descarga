// ReSharper disable InconsistentNaming
// ReSharper disable UseOfImplicitGlobalInFunctionScope
// ReSharper disable ThisInGlobalContext
// ReSharper disable AssignToImplicitGlobalInFunctionScope
(function (root, factory) {
    if (typeof define === "function" && define.amd) {
        define("mangiro", ["jquery", "throttle"], function (a0, a1) {
            return factory(a0, a1);
        });
    } else if (typeof exports === "object") {
        module.exports = factory(require("jquery"), require("throttle"));
    } else {
        factory(jQuery, Cowboy);
    }
})(this, function ($, $cow) {
    if (typeof $cow === "undefined" && typeof Cowboy !== "undefined") $cow = Cowboy;
    if (typeof $cow === "undefined") $cow = $;

    // jQuery extensions
    (function () {
        $.extend({
            getActualUrl: function () {
                return window.location.href;
            },

            getUrlVars: function (urlString) {
                var vars = [],
                    hash;
                var hashes = urlString.slice(urlString.indexOf('?') + 1).split('&');
                for (var i = 0; i < hashes.length; i++) {
                    hash = hashes[i].split('=');
                    vars.push(hash[0]);
                    vars[hash[0]] = hash[1];
                }
                return vars;
            },

            getActualUrlVars: function () {
                return $.getUrlVars(window.location.href);
            },

            getUrlVar: function (urlString, name) {
                return $.getUrlVars(urlString)[name];
            },

            getActualUrlVar: function (name) {
                return $.getActualUrlVars()[name];
            }
        });
    });

    // Utils
    var Utils = function () {
        "use strict";

        var _pageNumber = 1;

        function obfuscateUrl(url) {
            return window.btoa(encodeURIComponent(url));
        }

        function clarifyUrl(text) {
            return decodeURIComponent(window.atob(text));
        }

        return {
            insertContentPagination: function (dataUrl, selector, pageNumber) {
                if (typeof pageNumber !== "undefined" && pageNumber > _pageNumber) _pageNumber = pageNumber;
                _pageNumber = _pageNumber + 1;
                var url = clarifyUrl(dataUrl) + _pageNumber;
                $.getJSON(url, function (data) {
                    if (data.length > 1) {
                        $(selector).append(data[1]);
                        if (data[0] == -1) {
                            $("#masajax").hide();
                        }
                    }
                });
            },

            setMinHeightTextBio: function () {
                var divContent = $('#divContent');
                divContent.css("height", "auto");
                var divCuriosity = $('div.curiosity');
                var divCuriosityHeight = 0;
                var iCurHeight = divContent.height() + 50;
                if (iCurHeight > 800) { //tamaño mínimo para ampliar (se tiene en cuenta la foto)
                    divContent.height('800');
                    var divContentShadow = $('#divContentShadow');
                    divContentShadow.css('display', 'block');
                    divContentShadow.css('visibility', 'visible');
                    $('.btn-mas').click(function () {
                        $(this).hide("slow");
                        divContentShadow.hide("slow");
                        divContent.animate({ height: "100%", }, 500);
                    });
                } else {
                    $('.btn-mas').hide(); //no hace falta el botón ver más si es menor de 800
                }

                var iDescription = $(".bio-description").height();
                //si hay description, añadimos margen para separar de la foto
                if (iDescription > 0)
                    $(".bio-description").css("margin-top", "1.7rem");
            },

            supportsHistoryApi: function () {
                return !!(window.history && history.replaceState);
            },

            getCanonicalUrl: function () {
                var canonical;
                var links = document.getElementsByTagName("link");
                for (var i = 0; i < links.length; i++) {
                    if (links[i].getAttribute("rel") === "canonical") {
                        canonical = links[i].getAttribute("href");
                    }
                }
                return canonical;
            },

            getTwitterAccount: function () {
                var twtaccount;
                var via = $('meta[name=twitter\\:site]');
                if (via !== undefined && via != "") {
                    var viat = via.attr("content");
                    if (viat !== undefined && viat != "") {
                        if (viat.substring(0, 1) == "@") {
                            viat = viat.substring(1, viat.length);
                        }
                        twtaccount = viat;
                    }
                }
                return twtaccount;
            },

            autoselect: function (cid) {
                $('#' + cid).focus();
                $('#' + cid).select();
            },

            cleanAnchors: function (container) {
                log('Mangiro > Cleaning anchors...');
                if (typeof container != "undefined") {
                    $(container + " a").each(function (i, item) {
                        item.onfocus = new Function("if(this.blur)this.blur()");
                    });
                } else {
                    $("a").each(function (i, item) {
                        item.onfocus = new Function("if(this.blur)this.blur()");
                    });
                }
            },

            emailAtReplacement: function (selector) {
                selector = selector || '.nul-hibra';
                $(selector).replaceWith('&#64;');
            },

            anchorExternalReplacement: function () {
                $('a[rel="external"]').attr("target", "_blank");
                $('a.external').attr("target", "_blank");
            },

            validateEmail: function (email) {
                var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
                return re.test(email);
            },

            getCookie: function (name) {
                var cName, cValue, cookie = null, cookies = document.cookie.split(";");

                for (var i = 0; i < cookies.length; i++) {
                    cValue = cookies[i].substr(cookies[i].indexOf("=") + 1);
                    cName = cookies[i].substr(0, cookies[i].indexOf("=")).replace(/^\s+|\s+$/g, "");
                    if (cName == name) {
                        cookie = unescape(cValue);
                    }
                }
                return cookie;
            },

            setCookie: function (name, value, days) {
                days = days || 365 * 10;
                var domain = window.location.hostname;
                var domainArray = domain.split(".");
                if (domainArray[0] == "www") {
                    domainArray.shift();
                }
                var domainHost = domainArray.join(".");
                var today = new Date();
                today.setDate(today.getDate() + days);
                var expiration = today.toGMTString();
                var theCookie = name + " = " + escape(value) + "; expires=" + expiration + "; path=/; domain=." + domainHost;

                document.cookie = theCookie;
            },

            getNumericalString: function (num) {
                if (num > 1000) {
                    return (String(Math.round((num / 1000) * 10) / 10).replace(".", ",") + " k");
                } else {
                    return num;
                }
            },

            showComments: function (selector, hideCommentsClass, button) {
                if ($(selector).hasClass(hideCommentsClass)) {
                    $(selector).css('display', 'block');
                    $(selector).removeClass(hideCommentsClass);
                    $(button).html('Ocultar comentarios');
                } else {
                    $(selector).css('display', 'none');
                    $(selector).addClass(hideCommentsClass);
                    $(button).html('Mostrar comentarios');
                }
                return false;
            },

            loadInstagramRecent: function (instagramId, imagesCount) {
                var sURL = "/api/instagram.json/" + instagramId;
                $.ajax({
                    type: "GET",
                    url: sURL,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    beforeSend: function (xhr) {
                    },
                    success: function (data) {
                        if (null != data) {
                            try {
                                if (null != document.getElementById('divInstagramFullname'))
                                    document.getElementById('divInstagramFullname').innerHTML = data.entry_data.ProfilePage[0].graphql.user.full_name;

                                var iIndex = 0;
                                var items = [];
                                $.each(data.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges, function (key, val) {
                                    if (iIndex++ < imagesCount) {
                                        items.push("<li>");
                                        items.push('   <a href="https://www.instagram.com/p/' + val.node.shortcode + '" target="blank" title="' + val.node.edge_media_to_caption.edges[0].node.text + '" >');
                                        items.push('      <img class="instagram-recent item' + (iIndex - 1) + '" src="' + val.node.thumbnail_src + '" alt="' + val.node.edge_media_to_caption.edges[0].node.text + '" />');
                                        items.push('   </a>');
                                        items.push("</li>");
                                    }
                                });

                                $("<ul/>", {
                                    html: items.join("")
                                }).appendTo('.instagram-recent');
                            } catch (e) {
                                log("Mangiro > Error carga Instagram");
                            }
                        }
                    }
                });
            },

            registerUnsubscribeOneSignalButton: function (buttonCssClass) {
                if (typeof OneSignal != "undefined") {
                    OneSignal.getSubscription().then(function (value) {
                        if (value)
                            $(buttonCssClass).show();
                        else
                            $(buttonCssClass).hide();
                    })
                }
            },

            unsubscribeOneSignal: function () {
                if (typeof OneSignal != "undefined")
                    OneSignal.setSubscription(false);
            },
            isMobile: {
                Android: function () {
                    return navigator.userAgent.match(/Android/i);
                },
                BlackBerry: function () {
                    return navigator.userAgent.match(/BlackBerry/i);
                },
                iOS: function () {
                    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
                },
                Opera: function () {
                    return navigator.userAgent.match(/Opera Mini/i);
                },
                Windows: function () {
                    return navigator.userAgent.match(/IEMobile/i);
                },
                any: function () {
                    if (screen.width < 760)
                        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))
                            return true;
                        else
                            return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
                    else
                        return false;
                }
            }
        };
    };

    var _ = Utils();

    // DataLayerEvents
    var DataLayerEvents = function () {
        "use strict";
        return {
            trackVideo: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "video",
                        eventAction: "play",
                        eventLabel: title
                    });
                    setTimeout(function () {
                        dataLayer.push({
                            event: "GAevent",
                            eventCategory: "video",
                            eventAction: "10 sec",
                            eventLabel: title
                        });
                    }, 10000);
                }
            },
            trackSuscription: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "suscripcion",
                        eventAction: "normal",
                        eventLabel: title
                    });
                }
            },
            trackDigitalSuscription: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "suscripcion",
                        eventAction: "digital",
                        eventLabel: title
                    });
                }
            },
            trackNewsletter: function (title, label) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "newsletter",
                        eventAction: title,
                        eventLabel: label
                    });
                }
            },
            trackViewGallery: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "galeria",
                        eventAction: "visualizacion",
                        eventLabel: title
                    });
                }
            },
            trackIntextRelated: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "relacionados",
                        eventAction: "intext",
                        eventLabel: title
                    });
                }
            },
            trackIntextLink: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "relacionados",
                        eventAction: "intext",
                        eventLabel: title
                    });
                }
            },
            trackNavRelated: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "relacionados",
                        eventAction: "navegacion",
                        eventLabel: title
                    });
                }
            },
            trackAsideRelated: function (title) {
                if (typeof dataLayer != "undefined") {
                    dataLayer.push({
                        event: "GAevent",
                        eventCategory: "relacionados",
                        eventAction: "aside",
                        eventLabel: title
                    });
                }
            },
            trackScroll: function (title, tracked, article_default, article_selected) {
                var articleDefault = article_default;
                var articleSelected = article_selected;
                var percentWindow = 0.45;
                if (typeof $(articleDefault).offset() != "undefined" || typeof $(articleSelected).offset() != "undefined") {
                    var wintop = $(window).scrollTop() + Math.round($(window).height() * percentWindow);
                    var docheight = ($(articleSelected).length < 1) ? $(articleDefault).height() : $(articleSelected).height();
                    var docoffset = ($(articleSelected).length < 1) ? $(articleDefault).offset().top : $(articleSelected).offset().top;
                    var totalScroll = ((wintop - docoffset) / docheight) * 100;
                    var deep = 1;
                    if (typeof mgr.MGRScroll != "undefined")
                        deep = mgr.MGRScroll.articles.indexOf(mgr.MGRScroll.articles.find(function (item) { return (item.id == mgr.MGRScroll.current.id); })) + 1;
                    totalScroll = Math.max(Math.floor(totalScroll), 0);
                    if (typeof dataLayer != "undefined") {
                        if (totalScroll >= 0 && !tracked[[0, deep]]) {
                            tracked[[0, deep]] = true;
                            dataLayer.push({
                                event: "GAevent",
                                eventCategory: "scroll",
                                eventAction: "inicio",
                                eventLabel: deep
                            });
                            log("Mangiro > Event Scroll inicio");
                        }
                        else if (totalScroll >= 50 && !tracked[[50, deep]]) {
                            tracked[[50, deep]] = true;
                            dataLayer.push({
                                event: "GAevent",
                                eventCategory: "scroll",
                                eventAction: "50",
                                eventLabel: deep
                            });
                            log("Mangiro > Event Scroll 50%");
                        }
                        else if (totalScroll >= 100 && !tracked[[100, deep]]) {
                            tracked[[100, deep]] = true;
                            dataLayer.push({
                                event: "GAevent",
                                eventCategory: "scroll",
                                eventAction: "completo",
                                eventLabel: deep
                            });
                            log("Mangiro > Event Scroll completo");
                        }
                    }
                }
            }
        };
    };

    var _datalayer = DataLayerEvents();

    // WebService
    var WebService = function () {
        "use strict";

        function WebService(o) {
            this.endPoint = "/wsarticulo.asmx";
            this.defaultMethod = "POST";
            this.defaultContentType = "application/json; charset=utf-8";
            this.defaultDataType = "json";

            o = o || {}
            o = o.WebService || o;
            $.extend(this, o);
        }

        function callAPI(o) {
            $.ajax({
                type: this.defaultMethod,
                url: this.endPoint + o.action,
                data: o.data,
                contentType: this.defaultContentType,
                dataType: this.defaultDataType,
                success: o.successCallback,
                complete: o.completeCallback
            });
        };

        function favouriteSetCss(c, b) {
            var lnkFav = document.getElementById(c);
            lnkFav.className = b ? "icon-star-full" : "icon-star-empty";
            if (lnkFav.hasAttribute('isFav')) {
                lnkFav.removeAttribute('isFav');
            }
            lnkFav.setAttribute('isFav', b);
        };

        $.extend(WebService.prototype, {
            votarcom: function votarcom(idc, idu, cid, p) {
                callAPI({
                    action: "/VoteComment",
                    data: "{id:" + idc + ", uid:" + idu + ", cid:'" + cid + "', p:" + p + "}",
                    successCallback: function (data, textStatus) {
                        if (data.d.html != '') {
                            $('#' + data.d.controlid).html(data.d.html);
                        }
                    },
                    completeCallback: function (XMLHttpRequest, textStatus) {
                        //todo: hacer algo si hay un error
                    }
                });
            },

            votararticulotipovoto: function votararticulotipovoto(idArt, idTipoVoto) {
                callAPI({
                    action: "/VoteArticulo",
                    data: "{idArt:" + idArt + ", idTipoVoto:" + idTipoVoto + "}",
                    successCallback: function (result) {
                        //sumem 1 al comptador que s'hagi clicat
                        var contador = document.getElementById('conta' + idTipoVoto).innerHTML;
                        contador++;
                        document.getElementById('conta' + idTipoVoto).innerHTML = contador;
                        document.getElementById('contaMobile' + idTipoVoto).innerHTML = contador;

                        if (result != "undefined" && result.d != "undefined") {
                            if (result.d.length > 0) {
                                showVoteSuggestions(result.d);
                            }
                        }
                        //console.log(result.d);
                    },
                    complete: function () {
                        //treiem el vincle dels links de votació i els posem en gris
                        $("[id^='linkVotacion']").attr("href", "javascript:void(0);").addClass("disabled");
                        //afegim class 'voted' al item que s'ha clicat + Mobile
                        $("[id=linkVotacion" + idTipoVoto + "], [id=linkVotacionMobile" + idTipoVoto + "]")
                            .addClass("voted").removeClass("disabled");
                    }
                });

                function showVoteSuggestions(contents) {
                    if (contents.length > 0) {
                        var $html = $("<div class='suggestions'/>");
                        var $header = $("<h3>Más cosas similares...</h3>");
                        $html.append($header);
                        for (var i = 0; i < contents.length; i++) {
                            //console.log(contents[i].TitleForCover + " > " + contents[i].Url);
                            var $link = $("<p><a href='" + contents[i].url + "'>" + contents[i].title + "</a></p>");
                            $html.append($link);
                        }

                        //console.log($html);

                        $(".mangiroshare").append($html);
                    }
                }
            },
            votarart: function votarart(idc, cid, p) {
                callAPI({
                    action: "/VotePost",
                    data: "{id:" + idc + ", cid:'" + cid + "', p:" + p + "}",
                    successCallback: function (data, textStatus) {
                        if (data.d.html != '') {
                            $('#' + data.d.controlid).html(data.d.html);
                        }
                    },
                    completeCallback: function (XMLHttpRequest, textStatus) {
                        //todo: hacer algo si hay un error
                    }
                });
            },
            favourite: function favourite(a, c, r) {
                callAPI({
                    action: "/Favourite",
                    data: "{a:" + a + ", c:'" + c + "', r:" + r + ", u:'" + document.location + "'}",
                    successCallback: function (data, textStatus) {
                        if (data.d.Success) {
                            switch (data.d.Action) {
                                case 'SET_FAV':
                                    favouriteSetCss(data.d.ClientId, data.d.IsFavourite);
                                    break;
                                case 'CONFIRM_REMOVE_FAV':
                                    if (confirm("¿Desea eliminar de favoritos éste artículo?")) {
                                        favourite(a, c, true);
                                    }
                                    break;
                                case 'GOTO_LOGIN':
                                    _.setCookie("LoadFavourite", true);
                                    window.location.href = data.d.URL;
                                    break;
                                default:
                                    break;
                            }

                            if (data.d.Message != null && data.d.Message != 'undefined' && data.d.Message != "") {
                                alert(data.d.Message);
                            }
                        }
                    },
                    completeCallback: function (XMLHttpRequest, textStatus) {
                        //todo: hacer algo si hay un error
                    }
                });
            },
            getFavouriteCss: function getFavouriteCss(sIds) {
                callAPI({
                    action: "/GetFavouriteCss",
                    data: "{data:'" + sIds + "'}",
                    successCallback: function (data, textStatus) {
                        if (data.d.Success) {
                            var arrPartsData = data.d.Data.split(',');

                            for (var iIndex = 0; iIndex < arrPartsData.length; iIndex++) {
                                var sPartData = arrPartsData[iIndex];
                                if (sPartData != "") {
                                    var bIsFav = JSON.parse(sPartData.split('#')[1]);
                                    favouriteSetCss(sPartData.split('#')[0], bIsFav);
                                }
                            }
                        }
                    },
                    completeCallback: function (XMLHttpRequest, textStatus) {
                        //todo: hacer algo si hay un error
                    }
                });
            }
        });

        return WebService;
    }();

    // SkinDetector
    var SkinDetector = function () {
        "use strict";

        function SkinDetector(o) {
            this.maxTries = 50;
            this.resizeMaxTries = 3;
            this.skinClass = 'skinner';
            this.retrySleepTime = 500;
            this.useOriginalStatus = true;
            this.forceResize = true;
            this.minimumSize = 1280;

            o = o || {};
            o = o.SkinDetector || o;
            $.extend(this, o);
        }

        var $body;
        var $window;

        var _counter = 0;
        var _resizeCounter = 0;

        var _originalStatus = "";

        var doDetectSkin = function (o) {
            if (!tryDetectingSkin(o) && _counter <= o.maxTries) {
                setTimeout(doDetectSkin, o.retrySleepTime, o);
            }
        };

        var tryDetectingSkin = function (o) {
            log("Mangiro > Trying to detect skin... " + _counter);
            _counter++;
            var comparerStatus = (o.useOriginalStatus) ? _originalStatus : "none";
            if ($body.css('backgroundImage') != comparerStatus) {
                log('Mangiro > Skin detected!');
                $body.addClass(o.skinClass);
                $window.trigger('skindetected');
                console.log("skin detected");
                if (o.forceResize) doForceResize(o);
                return true;
            }

            return false;
        };

        var doForceResize = function (o) {
            if (tryForcingResize(o)) {
                setTimeout(doForceResize, o.retrySleepTime, o);
            }
        };

        var tryForcingResize = function (o) {
            log("Mangiro > Triggering resize... " + _resizeCounter);
            $window.trigger('resize');
            _resizeCounter++;
            return (_resizeCounter < o.resizeMaxTries);
        };

        $.extend(SkinDetector.prototype, {
            start: function start(e) {
                log("Mangiro > Initializing Skin detection...");
                var that = e ? e : this;
                if (window.innerWidth < that.minimumSize) return;
                _counter = 0;
                _resizeCounter = 0;
                $body = $('body');
                $window = $(window);
                if (that.useOriginalStatus) _originalStatus = $body.css('backgroundImage');
                doDetectSkin(that);
            }
        });

        return SkinDetector;
    }();

    var ScrollDetector = function () {
        "use strict";

        function ScrollDetector(o) {
            this.sticky = true;
            this.scroll = true;
            this.stickyClass = "sticky";
            this.scrollDownClass = "scroll-down";
            this.scrollUpClass = "scroll-up";
            this.stickyGap = 0;
            this.scrollGap = 0;
            this.stickyThrottleTime = 50;
            this.scrollThrottleTime = 150;
            this.articleSelector = ".post"; // needed to track the scroll event in posts
            this.articleDefault = "#main .article-main:first-of-type";
            this.articleSelected = "#main .article-main.selected";
            //events scrolldown and scrollup
            $(this).on("scrolldown", function (e) {
                log("scroll down");
            });
            $(this).on("scrollup", function (e) {
                log("scroll up");
            });
            /* TODO: Añadir posibilidad de un mínimo de distancia en una dirección para aplicar cambio ¿? */
            this.scrollChangeSize = 0;
            o = o || {};
            o = o.ScrollDetector || o;
            $.extend(this, o);
        }

        var $window = $(window);
        var $body = $('body');

        var _stickyed = false;
        var _lastPosition = 0;

        var doCalculateSticky = function (that) {
            var position = $window.scrollTop();
            var gap = $.isFunction(that.stickyGap) ? that.stickyGap() : that.stickyGap;
            var diff = position - gap;
            if (diff > 0 && !_stickyed) {
                log("Mangiro > Sticking at.. " + position);
                $body.addClass(that.stickyClass);
                _stickyed = true;
            } else if ((diff < 0) && _stickyed) {
                log("Mangiro > Unsticking at.. " + position);
                $body.removeClass(that.stickyClass);
                _stickyed = false;
            }
        }

        var doCalculateDirection = function (that) {
            var position = $window.scrollTop();
            var gap = $.isFunction(that.scrollGap) ? that.scrollGap() : that.scrollGap;
            var diff = position - gap;
            if (diff > 0) {
                $body.toggleClass(that.scrollDownClass, (position > _lastPosition));
                $body.toggleClass(that.scrollUpClass, !(position > _lastPosition));
                //events scrollup and scrolldown
                if (position > _lastPosition) {
                    $(that).trigger("scrolldown");
                }
                else {
                    $(that).trigger("scrollup");
                }
            } else {
                $body.removeClass(that.scrollDownClass + " " + that.scrollUpClass);
            }
            _lastPosition = position;
        }

        $.extend(ScrollDetector.prototype, {
            start: function () {
                log("Mangiro > Initializing Scrolling detection...");
                var that = this;

                if (that.sticky) {
                    doCalculateSticky(that);
                    log("Mangiro > Attaching Sticky ScrollDetector");
                    $window.on('scroll.mangiro.sticky', $cow.throttle(that.stickyThrottleTime, function () { doCalculateSticky(that); }));
                }

                if (that.scroll) {
                    $window.on('scroll.mangiro.scroll', $cow.throttle(that.scrollThrottleTime, function () { doCalculateDirection(that); }));
                }

                if ($(that.articleSelector).length > 0) {
                    var tracked = {};
                    tracked[0] = false;
                    tracked[50] = false;
                    tracked[100] = false;
                    $window.on('scroll.datalayer', $cow.throttle(that.scrollThrottleTime, function () {
                        var title = $("h1")[0].innerHTML;
                        _datalayer.trackScroll(title, tracked, that.articleDefault, that.articleSelected);
                    }));
                }
            }
        });

        return ScrollDetector;
    }();

    var Social = function () {
        "use strict";

        function Social(o) {
            this.selector = ".mangiroshare";
            this.trackSelector = ".mangirotrack";
            this.twitterAccount = _.getTwitterAccount();

            this.shareServices = [];

            // Facebook Service
            this.shareServices.push({
                name: "Facebook",
                selector: "a.fck",
                action: function (d, that) {
                    var myWindow = window.open("http://www.facebook.com/sharer/sharer.php?u=" + d.url, this.name, "toolbar=0,status=0,width=900,height=500");
                    myWindow.focus();
                }
            });

            // Twitter Service
            this.shareServices.push({
                name: "Twitter",
                selector: "a.twt",
                action: function (d, that) {
                    var intentUrl = "https://twitter.com/intent/tweet?url=" + d.url;
                    if (d.text != "undefined" && d.text != "") intentUrl += "&text=" + d.text;
                    if (that.twitterAccount != "undefined" && that.twitterAccount != "") intentUrl += "&via=" + that.twitterAccount;
                    var myWindow = window.open(intentUrl, this.name, "toolbar=0,status=0,width=650,height=360");
                    myWindow.focus();
                }
            });

            // Pinterest Service
            this.shareServices.push({
                name: "Pinterest",
                selector: "a.pin",
                action: function (d, that) {
                    var myWindow = window.open("http://pinterest.com/pin/create/link/?url=" + d.url
                        + "&description=" + d.text + "&media=" + d.image, this.name, "toolbar=0,status=0,width=660,height=445");
                    myWindow.focus();
                }
            });

            // Google Service
            this.shareServices.push({
                name: "GooglePlus",
                selector: "a.goo",
                action: function (d, that) {
                    var myWindow = window.open("https://plus.google.com/share?hl=es&url=" + d.url, this.name, "toolbar=0,status=0,width=500,height=500");
                    myWindow.focus();
                }
            });

            // Whatsapp Service
            this.shareServices.push({
                name: "Whatsapp",
                selector: "a.wha",
                action: function (d, that) {
                    document.location.href = "whatsapp://send?text=" + d.text + " " + d.url;
                }
            });

            // Tuenti Service
            this.shareServices.push({
                name: "Tuenti",
                selector: "a.tue",
                action: function (d, that) {
                    var myWindow = window.open("http://www.tuenti.com/share?url=" + d.url, "_blank");
                    myWindow.focus();
                }
            });

            // Meneame Service
            this.shareServices.push({
                name: "Meneame",
                selector: "a.men",
                action: function (d, that) {
                    var myWindow = window.open("http://www.meneame.net/submit.php?url=" + d.url, "_blank");
                    myWindow.focus();
                }
            });

            // Email Service
            this.shareServices.push({
                name: "Email",
                selector: "a.mai",
                action: function (d, that) {
                    document.location.href = "mailto:?subject=" + d.text + "&body=" + d.text + " " + d.url;
                }
            });

            // Flipboard Service
            this.shareServices.push({
                name: "Flipboard",
                selector: "a.fbd",
                action: function (d, that) {
                    var myWindow = window.open("https://share.flipboard.com/bookmarklet/popout?v=2&url=" + d.url + "&title=" + d.text, this.name, "toolbar=0,status=0,width=900,height=500");
                    myWindow.focus();
                }
            });

            o = o || {};
            o = o.Social || o;
            $.extend(this, o);
        }

        var getShareData = function (el) {
            var result = {};

            if ($.isFunction(el.attr)) {
                result.url = el.attr("data-url");
                result.text = el.attr("data-text");
                result.image = el.attr("data-image");
            }

            return result;
        };

        $.extend(Social.prototype, {
            initTrackClickEvents: function (sel) {
                sel = sel || this.trackSelector;
                var that = this;
                $(sel).on('click.mangiro.track', function () {
                    if (typeof dataLayer != "undefined") {
                        var $this = $(this);
                        that.trackEvent({ category: $this.attr("data-trackcat"), action: $this.attr("data-trackact"), label: $this.attr("href") });
                    }
                });
            },
            initShareLinks: function () {
                log("Mangiro > Initializing Share links...");
                var container = $(this.selector);
                if (container.length > 0) {
                    var that = this;

                    $(this.shareServices).each(function (i, service) {
                        container.on('click.mangiro.share', service.selector, function () {
                            var d = getShareData($(this));
                            if (typeof d.url == 'undefined') d.url = encodeURI(window.location.href);
                            that.trackEvent({ category: service.name, action: 'comparte', label: decodeURI(d.url) });
                            service.action(d, that);
                            return false;
                        });
                    });
                }
            },

            disableShareLinks: function () {
                var container = $(this.selector);
                if (container.length > 0) {
                    container.off('.mangiro.share');
                }
            },

            refreshShareLinks: function () {
                this.disableShareLinks();
                this.initShareLinks();
            },

            trackEvent: function (o) {
                if (typeof dataLayer != "undefined" && typeof o.category != "undefined" && typeof o.action != "undefined" && typeof o.label != "undefined") {
                    dataLayer.push({ 'event': 'GAeventsocial', 'eventCategory': o.category, 'eventAction': o.action, 'eventLabel': o.label });
                }
            },

            addShareService: function (service) {
                this.shareServices.push(service);
            }
        });

        return Social;
    }();

    var Misc = function () {
        "use strict";

        function Misc(o) {
            o = o || {};
            o = o.Misc || o;
            $.extend(this, o);
        }

        $.extend(Misc.prototype, {
            initDefaultTagDescription: function (selector) {
                selector = selector || {};
                selector.base = selector.base || "#tag-detail";
                selector.readMore = selector.readMore || selector.base + " div.read-more";
                selector.spanMore = selector.spanMore || selector.readMore + " span.more";
                selector.spanLess = selector.spanLess || selector.readMore + " span.less";
                selector.description = selector.description || selector.base + " #tag-description";

                var showTagDescription = function (selector) {
                    log("Showing tag description...");
                    $(selector.spanMore).hide();
                    $(selector.spanLess).show();

                    $(selector.description).children().each(function (i) {
                        $(this).show(800);
                    });
                };

                var hideTagDescription = function (selector) {
                    log("Hidding tag description...");
                    $(selector.spanMore).show();
                    $(selector.spanLess).hide();

                    var introEnded = false;
                    $(selector.description).children().each(function (i) {
                        if (!introEnded) {
                            $(this).show(800);
                            introEnded = $(this).is('p');
                        } else {
                            $(this).hide();
                        }
                    });
                    $('html, body').animate({ scrollTop: $(window).top }, 1000);
                };

                // Init
                if ($(selector.readMore).length > 0) {
                    $(selector.spanMore).click(showTagDescription(selector));
                    $(selector.spanLess).click(hideTagDescription(selector));

                    hideTagDescription(selector);
                }
            },

            initScrollPagination: function (options) {
                log("Mangiro > Init Scroll Pagination...");
                options = options || {};
                options.startPage = options.startPage || 2;
                options.heightOffset = options.heightOffset || 50;

                var getNextPageUrl = function (nextPage) {
                    nextPage = nextPage || $('#nextPage').val();

                    var actualUrl = $.getActualUrl();
                    //remove parameters
                    actualUrl = actualUrl.split('?')[0];
                    // clean final slash if exists
                    actualUrl = actualUrl.replace(/\/jQuery/, '');
                    var newUrl = '';
                    if (nextPage > 0) {
                        // manage querystring or not
                        var hashes = actualUrl.split('&');

                        if (isNaN(hashes[hashes.length - 1])) {
                            newUrl = actualUrl + '?_page=' + nextPage;
                        } else {
                            for (var i = 0; i < (hashes.length - 1); i++) {
                                if (i > 1) newUrl += '&';
                                newUrl += hashes[i];
                            }
                            newUrl += '&_page=' + nextPage;
                        }

                        return newUrl;
                    }
                    return null;
                };

                if ($('#list').length == 1) {
                    var flag = true;
                    $("#list ul.more").remove();
                    $("#listPagination, #listPagination p.view-more").show();
                    $("#nextPage").val(options.startPage);

                    $(window).scroll(function () {
                        if ($('#nextPage').val() > 0) {
                            var mayLoadContent = ($(window).scrollTop() + $(window).height() + options.heightOffset) >= $('#listPagination').offset().top;

                            if (mayLoadContent && flag) {
                                flag = false;
                                var newUrl = getNextPageUrl();
                                if (newUrl != null) {
                                    $("#listPagination p").toggle();
                                    $.getJSON(newUrl, function (data) {
                                        if (typeof _gaq != "undefined") {
                                            _gaq.push(['_trackEvent', "Listado", "Next Page", $('#nextPage').val()]);
                                        }

                                        if ($("#list ul + ul.more").length == 0)
                                            $("#list ul").after('<ul class="more"></ul>');
                                        $("#list ul.more").append(data[1]);
                                        $("#listPagination p").toggle();

                                        var auxNextPage = data[0];
                                        if (auxNextPage > 0) {
                                            $("#nextPage").val(auxNextPage).trigger('change');
                                            flag = true;
                                        } else {
                                            $("#listPagination").hide();
                                        }
                                    });
                                }
                            }
                        } else {
                            $('#listPagination').hide();
                        }
                    });
                }
            },

            initTypeAhead: function (options) {
                this.selector = "#searching .typeahead";
                this.apiUrl = "/api/etiquetas.ashx";
                this.apiCache = true;
                this.apiTTL = 86400000; //1 day
                this.hint = true;
                this.highlight = true;
                this.minLength = 1;
                this.name = "tags";

                $.extend(this, options);

                var $typeAhead = $(this.selector);

                if ($typeAhead.length > 0) {
                    var that = this;

                    require(['typeahead', 'bloodhound'], function (typeahead, Bloodhound) {
                        var tags = new Bloodhound({
                            datumTokenizer: Bloodhound.tokenizers.whitespace,
                            queryTokenizer: Bloodhound.tokenizers.whitespace,
                            prefetch: {
                                url: that.apiUrl,
                                cache: that.apiCache,
                                ttl: that.apiTTL
                            }
                        });

                        tags.initialize();

                        $typeAhead.typeahead({
                            hint: that.hint,
                            highlight: that.highlight,
                            minLength: that.minLength
                        },
                            {
                                name: that.name,
                                source: tags
                            });
                    });
                }
            },

            initNewsletterSubscription: function (options) {
                this.newsletterConfig = {};
                this.newsletterConfig.formSelector = "";
                this.newsletterConfig.actionURL = "/usuarios/boletin";
                this.newsletterConfig.btnSelector = "#btnFooterSuscribir";
                this.newsletterConfig.txtSelector = "#txtFooterEmail";
                this.newsletterConfig.chkSelector = "#chkFooterCondiciones";
                this.newsletterConfig.txtErrorEmpty = "¡El e-mail es obligatorio!";
                this.newsletterConfig.txtErrorNotValid = "¡El e-mail es incorrecto!";
                this.newsletterConfig.chkError = "¡Hay que aceptar las condiciones legales y la política de privacidad!";
                this.newsletterConfig.errorTimeout = 2000;
                this.newsletterConfig.chkSelectorInfo = "#chkFooterInfo";
                this.newsletterConfig.chkSelectorOthers = ".checkboxExtra";
                this.newsletterConfig.chkNewsletterList = ".chkboxNewsletter";
                this.newsletterConfig.selectNewsletterList = ".slctNewsletters";
                
                this.newsletterConfig.title = "Titulo";

                $.extend(this.newsletterConfig, options);

                var that = this.newsletterConfig;

                require(['jqueryui-tooltip'], function () {
                    var showTooltip = function (obj, msg) {
                        if ($.isFunction($.fn.tooltip)) {
                            $(obj).tooltip('option', 'disabled', false);
                            if (msg != "")
                                $(obj).tooltip("option", "content", msg);

                            $(obj).tooltip('open');
                            setTimeout(function () {
                                $(obj).tooltip('close');
                                $(obj).tooltip('option', 'disabled', true);
                            }, that.errorTimeout);
                        }
                    };

                    var forcePostSuscribe = function (evt) {
                        if ($(that.txtSelector).val() == "") {
                            showTooltip(that.txtSelector, that.txtErrorEmpty);
                            _datalayer.trackNewsletter(that.title, "error-mail-vacio");
                            return false;
                        }
                        if (!_.validateEmail($(that.txtSelector).val())) {
                            showTooltip(that.txtSelector, that.txtErrorNotValid);
                            _datalayer.trackNewsletter(that.title, "error-mail-ko");
                            return false;
                        }
                        if (!$(that.chkSelector).is(":checked")) {
                            var idElement = that.chkSelector;
                            if ($(that.chkSelector).hasClass('no-tooltip'))
                                idElement = that.txtSelector;

                            showTooltip(idElement, that.chkError);
                            _datalayer.trackNewsletter(that.title, "error-condiciones");
                            return false;
                        }
                        // All OK
                        $(".spinner").addClass("spinner-active");
                        var form = document.createElement('form');
                        form.method = 'post';
                        form.action = that.actionURL;
                        var emailInput = document.createElement('input');
                        emailInput.type = 'hidden';
                        emailInput.name = 'e';
                        emailInput.value = $(that.txtSelector).val();
                        form.appendChild(emailInput);
                        var actionInput = document.createElement('input');
                        actionInput.type = 'hidden';
                        actionInput.name = 'a';
                        actionInput.value = 'subscribe';
                        form.appendChild(actionInput);
                        var submitButton = document.createElement('button');
                        submitButton.type = 'submit';
                        submitButton.name = 'btn_submit';
                        submitButton.id = "btn_submit";
                        submitButton.value = 'send';
                        form.appendChild(submitButton);

                        if ($(that.chkSelectorInfo).length > 0) {
                            //extra info
                            var infoCheck = document.createElement('input');
                            infoCheck.type = 'hidden';
                            infoCheck.name = 'c';
                            if ($(that.chkSelectorInfo).is(":checked"))
                                infoCheck.value = $(that.chkSelectorInfo).val();
                            else
                                infoCheck.value = 'no';
                            form.appendChild(infoCheck);
                        }

                        //Comprobamos si hay selector extra
                        if ($(that.chkSelectorOthers).length > 0) {
                            //extra info
                            var extraCheck = document.createElement('input');
                            extraCheck.type = 'hidden';
                            extraCheck.name = 'extraCheck';
                            var checks = $(that.chkSelectorOthers);

                            for (var i = 0; i < checks.length; i++) {
                                var check = checks[i];
                                if (check.checked == true) {
                                    extraCheck.value += check.value + ";";
                                }
                            }

                            form.appendChild(extraCheck);
                        }

                        //Comprobamos si hay newsletter seleccionado
                        if ($(that.chkNewsletterList).length > 0) {
                            //Lista Newsletters
                            var inputListNewsletters = document.createElement('input');
                            inputListNewsletters.type = 'hidden';
                            inputListNewsletters.name = 'listNewsletters';
                            var newsletters = $(that.chkNewsletterList);
                            for (var i = 0; i < newsletters.length; i++) {
                                var newsletter = newsletters[i];
                                if (newsletter.checked == true) {
                                    inputListNewsletters.value += newsletter.value + ";";
                                }
                            }
                            form.appendChild(inputListNewsletters);
                        }
                        else if ($(that.selectNewsletterList).length > 0) {
                            //Lista Newsletters
                            var slctListNewsletters = document.createElement('input');
                            slctListNewsletters.type = 'hidden';
                            slctListNewsletters.name = 'listNewsletters'; 
                            var nLetter = $(that.selectNewsletterList)[0];
                            slctListNewsletters.value = nLetter.value;
                            
                            form.appendChild(slctListNewsletters);
                        }

                        document.body.appendChild(form);
                        $("#btn_submit").submit(function (event) {
                            return false;
                        });

                        form.submit();
                        //datalayer newsletter
                        _datalayer.trackNewsletter(that.title, "exito");
                        return false;
                    };
                    if ($.isFunction($.fn.tooltip)) {
                        $(that.txtSelector).tooltip({
                            disabled: true,
                            position: {
                                my: "left bottom-5",
                                at: "left top"
                            },
                            classes: {
                                "ui-tooltip": "ui-corner-all ui-widget"
                            }
                        });
                        $(that.chkSelector).tooltip({
                            disabled: true,
                            classes: {
                                "ui-tooltip": "ui-corner-all ui-widget"
                            }
                        });
                    }

                    $(that.btnSelector).on('click.newsletter', forcePostSuscribe);
                });
            },

            initNewsletterValidation: function (options) {
                this.newsletterConfig = {};
                this.newsletterConfig.txtSelector = ".entry-content .bottom.text-center input[type=text]";
                this.newsletterConfig.chkSelector = ".entry-content .bottom.text-center input[type=checkbox]";

                $.extend(this.newsletterConfig, options);
                var that = this.newsletterConfig;

                if ($(that.txtSelector).val() == "") {
                    showTooltip(that.txtSelector, that.txtErrorEmpty);
                    _datalayer.trackNewsletter(that.title, "error-mail-vacio");
                    return false;
                }
                if (!_.validateEmail($(that.txtSelector).val())) {
                    showTooltip(that.txtSelector, that.txtErrorNotValid);
                    _datalayer.trackNewsletter(that.title, "error-mail-ko");
                    return false;
                }
                if (!$(that.chkSelector).is(":checked")) {
                    var idElement = that.chkSelector;
                    if ($(that.chkSelector).hasClass('no-tooltip'))
                        idElement = that.txtSelector;

                    showTooltip(idElement, that.chkError);
                    _datalayer.trackNewsletter(that.title, "error-condiciones");
                    return false;
                }

                //datalayer newsletter
                _datalayer.trackNewsletter(that.title, "exito");
                return true;
            },

            initNewsletterPopUpSubscription: function (options) {
                this.newsletterPopUpConfig = {};
                this.newsletterPopUpConfig.formSelector = "";
                this.newsletterPopUpConfig.actionURL = "/usuarios/boletin";
                this.newsletterPopUpConfig.btnSelector = "#btnPopUpSuscribir";
                this.newsletterPopUpConfig.txtSelector = "#txtPopUpEmail";
                this.newsletterPopUpConfig.chkSelector = "#chkPopUpCondiciones";
                this.newsletterPopUpConfig.txtErrorEmpty = "¡El e-mail es obligatorio!";
                this.newsletterPopUpConfig.txtErrorNotValid = "¡El e-mail es incorrecto!";
                this.newsletterPopUpConfig.chkError = "¡Hay que aceptar las condiciones legales y la política de privacidad!";
                this.newsletterPopUpConfig.errorTimeout = 4000;
                this.newsletterPopUpConfig.chkSelectorInfo = "#chkPopUpInfo";

                this.newsletterPopUpConfig.waitSeconds = 1;
                this.newsletterPopUpConfig.daysNoAction = 1;
                this.newsletterPopUpConfig.daysClose = 1;
                this.newsletterPopUpConfig.yearsSuscribe = 1;
                this.newsletterPopUpConfig.title = "Titulo popUp";
                this.arrastrasPopUp = true;
                this.showCountdown = 0;

                $.extend(this.newsletterPopUpConfig, options);

                var that = this.newsletterPopUpConfig;

                require(['jqueryui-tooltip'], function () {
                    var showTooltip = function (obj, msg) {
                        if ($.isFunction($.fn.tooltip)) {
                            $(obj).tooltip('option', 'disabled', false);
                            if (msg != "")
                                $(obj).tooltip("option", "content", msg);
                            $(obj).tooltip('open');
                            setTimeout(function () {
                                $(obj).tooltip('close');
                                $(obj).tooltip('option', 'disabled', true);
                            }, that.errorTimeout);
                        }
                    };

                    var forcePostSuscribePopUp = function (evt) {
                        if ($(that.txtSelector).val() == "") {
                            showTooltip(that.txtSelector, that.txtErrorEmpty);
                            _datalayer.trackNewsletter(that.title, "error-mail-vacio");
                            return false;
                        }
                        if (!_.validateEmail($(that.txtSelector).val())) {
                            showTooltip(that.txtSelector, that.txtErrorNotValid);
                            _datalayer.trackNewsletter(that.title, "error-mail-ko");
                            return false;
                        }
                        if (!$(that.chkSelector).is(":checked")) {
                            var idElement = that.chkSelector;
                            if ($(that.chkSelector).hasClass('no-tooltip'))
                                idElement = that.txtSelector;

                            showTooltip(idElement, that.chkError);
                            _datalayer.trackNewsletter(that.title, "error-condiciones");
                            return false;
                        }

                        var crm = 'no';
                        if ($(that.chkSelectorInfo).length > 0 && $(that.chkSelectorInfo).is(":checked")) {
                            crm = $(that.chkSelectorInfo).val();
                        }

                        $.ajax({
                            url: '/usuarios/boletin',
                            type: 'POST',
                            data: {
                                'e': $(that.txtSelector).val(),
                                'a': 'subscribe',
                                'c': crm,
                                'btn_submit': 'send'
                            },
                            beforeSend: function () {
                                console.log('Empezando envio');
                                $(".spinner").addClass("spinner-active");
                            },
                            success: function (msg) {
                                console.log('Correo enviado');
                                $('.popUp-newsletter').addClass('ocultar');
                                $('.popUp-newsletter-result').removeClass('ocultar');
                            },
                            complete: function (msg) {
                                console.log('Completado');
                                $(".spinner").removeClass("spinner-active");
                            }
                        });
                        var daysYearsSubscribe = this.yearsSuscribe * 365;
                        _.setCookie("popUp", "subscribed", that.daysYearsSubscribe);
                        //datalayer newsletter
                        _datalayer.trackNewsletter(that.title, "exito");
                        return false;
                    };
                    if ($.isFunction($.fn.tooltip)) {
                        $(that.txtSelector).tooltip({
                            disabled: true,
                            position: {
                                my: "left bottom-5",
                                at: "left top"
                            },
                            classes: {
                                "ui-tooltip": "ui-corner-all ui-widget"
                            }
                        });
                        $(that.chkSelector).tooltip({
                            disabled: true,
                            classes: {
                                "ui-tooltip": "ui-corner-all ui-widget"
                            }
                        });
                    }
                    var initPopUp = function () {
                        $('.popUp-newsletter').removeClass("ocultar");
                        if (isMobile.any()) {
                            $("#backPopMobileOverlay").css("display", "block");
                        }

                        $('.closeadvt-popup').on('click', function (event) {
                            if (_.getCookie("popUp") != "subscribed") {
                                _.setCookie("popUp", "close", that.daysClose);
                            }
                        });
                        $('#backPopMobileOverlay').on('click', function (event) {
                            if (_.getCookie("popUp") != "subscribed") {
                                _.setCookie("popUp", "close", that.daysClose);
                            }
                        });

                        $(that.btnSelector).on('click.newsletter', forcePostSuscribePopUp);
                    };
                    var showPopUpNewsletter = function (waitShow) {
                        if (_.getCookie("euconsent") != null) {
                            var showPopup = false;

                            if (that.showCountdown <= 0) showPopup = true;

                            if (showPopup == false) {
                                if (_.getCookie("countdown") != null) {
                                    if (_.getCookie("countdown") <= 0) {
                                        showPopup = true;
                                    }
                                    else {
                                        var index = _.getCookie("countdown") - 1;
                                        _.setCookie("countdown", index);
                                        if (index == 0)
                                            showPopup = true;
                                    }
                                } else {
                                    _.setCookie("countdown", that.showCountdown - 1, 1);
                                }
                            }

                            if (showPopup) {

                                if (!_.getCookie("popUp")) {
                                    //log("no tiene el cookie PopUp");
                                    setTimeout(function () {
                                        initPopUp();
                                        log(waitShow);
                                        _.setCookie("popUp", "mostrar", that.daysNoAction);
                                        if (screen.width >= 768) {
                                            $(".popUp-newsletter").animate({ left: '20px' });
                                        }
                                    }, waitShow);
                                }
                                else {
                                    if (_.getCookie("popUp") == "mostrar" && that.arrastrasPopUp) {
                                        initPopUp();
                                        if (screen.width >= 768) {
                                            $(".popUp-newsletter").animate({ left: '20px' });
                                        }
                                    }
                                }
                            }
                        }
                    };
                    var waitMiliSeconds = that.waitSeconds * 1000;

                    showPopUpNewsletter(waitMiliSeconds);

                    //$(that.btnSelector).on('click.newsletter', forcePostSuscribePopUp);
                });
            },

            //END PopUp

            initSearchInputs: function (options) {
                log("Mangiro > Initializing Search Inputs...");
                this.searchConfig = {};
                this.searchConfig.actionURL = "/buscador/?q=";
                this.searchConfig.inputs = [
                    { text: "#inputText", button: "#btnBusc", name: "txtBuscador" },
                    { text: "#inputTextBurguer", button: "#btnBuscBurguer", name: "txtBuscadorBurguer" },
                    { text: "#inputText404", button: "#btnBusc404", name: "txtBuscador404" }
                ];

                $.extend(this.searchConfig, options);

                var that = this.searchConfig;

                var enterSearch = function (evt) {
                    evt = (evt) ? evt : ((event) ? event : null);
                    var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);

                    if ((evt.keyCode == 13) && (node.type == "text")) {
                        var search = '';

                        for (var i = 0; i < that.inputs.length; i++) {
                            if (node.name == that.inputs[i].name) {
                                search = $(that.inputs[i].text).val();
                                break;
                            }
                        }

                        if (search != '') {
                            document.location = that.actionURL + search;
                        }

                        return false;
                    }

                    return true;
                };

                $(document).on('keyup.mangiro.search', enterSearch);

                for (var i = 0; i < that.inputs.length; i++) {
                    var ipt = that.inputs[i];
                    $(ipt.button).attr('data-text', ipt.text).click(function () {
                        var $this = $(this);
                        var search = $($this.attr('data-text')).val();
                        if (search != "") {
                            document.location = that.actionURL + search;
                        }
                    });
                }
            },

            initSmartySizes: function (options) {
                log("Mangiro > Initializing Smarty Sizes...");
                this.selector = ".smarty";
                $.extend(this, options);
                var that = this;

                var setSmartyParentsMinHeight = function () {
                    $(that.selector).each(function (i, item) {
                        var $item = $(item);
                        var $parent = $item.parent();
                        $parent.css('minHeight', 'initial');
                        var iMinHeight = $parent.height();
                        $parent.css('minHeight', iMinHeight);
                    });
                };

                $(window).on('load.mangiro.smarty', setSmartyParentsMinHeight);
                $(window).on('resize.mangiro.smarty', setSmartyParentsMinHeight);
            },

            initPageAutoRefresh: function (options) {
                log("Mangiro > Initializing Page Autorefresh...");
                this.time = 600000;
                $.extend(this, options);

                setInterval('window.location.href = window.location.href', this.time);
            },

            setLazyLoadImagesSizes: function () {
                log("Setting lazy load images sizes...");
                var figures = $('figure');
                figures.each(function (i, item) {
                    var figure = $(item);
                    if (figure.find(".lazyload").length > 0 || figure.find(".lazyloading").length > 0) {
                        var size = 0;
                        var figureWidth = figure.width();
                        var resolutionWidth = window.innerWidth;
                        if (figureWidth > 0 && resolutionWidth > 0) {
                            size = Math.round((figureWidth / resolutionWidth) * 100) + 1;
                            figure.find('img').each(function (i, image) {
                                image.sizes = size + 'vw';
                            });
                        }
                    }
                });
            },

            initMostViewTabs: function (o) {
                this.defaultCategory = 0;
                this.refreshTitle = true;
                this.containerSelector = "#gpLoMas";
                this.actionsSelector = ".tabs li";
                this.contentsSelector = ".element";
                this.titleSelector = ".title";
                this.selectedClass = "select";
                this.getSelectorByCategory = function (category) {
                    var result;
                    category = parseInt(category, 10);
                    if (category > 0) {
                        result = ".op" + category;
                    }
                    return result;
                }
                this.getSelectedData = function ($selected) {
                    var result = {};

                    var $data = $selected.find("a");
                    result.contentSelector = $data.attr("href");
                    result.title = $data.attr("data-title");

                    return result;
                };
                this.showSelected = function ($selected) {
                    $selected.fadeIn();
                };
                $.extend(this, o);

                var that = this;

                var $container = $(this.containerSelector);
                if ($container.length > 0) {
                    $container.on('click.mangiro.mostviews', this.actionsSelector, function (e) {
                        e.preventDefault();
                        $container.find(that.actionsSelector).removeClass(that.selectedClass);
                        $(this).addClass(that.selectedClass);

                        var data = that.getSelectedData($(this));
                        if (that.refreshTitle) $container.find(that.titleSelector).html(data.title);
                        $container.find(that.contentsSelector).hide();
                        that.showSelected($container.find(data.contentSelector));
                    });

                    // Init default category
                    var categorySelector = this.getSelectorByCategory(this.defaultCategory);
                    var showFirst = true;

                    if (typeof categorySelector != "undefined" && categorySelector != "") {
                        var $link = $container.find(categorySelector);
                        if ($link.length > 0) {
                            $link.click();
                            showFirst = false;
                        }
                    }

                    if (showFirst) {
                        $container.find(this.actionsSelector).first().click();
                    }
                }
            },

            removeCanonicalUrl: function removeCanonicalUrl() {
                $("link[rel=canonical]").each(function () {
                    this.remove();
                });
            },

            removeAmpLink: function removeAmpLink() {
                $("link[rel=amphtml]").each(function () {
                    this.remove();
                });
            },

            removeMetaRobots: function removeMetaRobots() {
                $("meta[name=robots]").each(function () {
                    this.remove();
                });
            },

            updateCanonicalUrl: function updateCanonicalUrl(url) {
                if ($("link[rel=canonical]").length > 0) {
                    this.removeCanonicalUrl();
                }
                $("head").append("<link rel=\"canonical\" href=\"http://" + window.location.hostname + url + "\">");
            },

            updateAmpLink: function updateAmpLink(url) {
                if ($("link[rel=amphtml]").length > 0) {
                    this.removeAmpLink();
                }
                $("head").append("<link rel=\"amphtml\" href=\"http://" + window.location.hostname + url + "/amp\">");
            },

            addCanonicalUrl: function addCanonicalUrl(url) {
                if ($("link[rel=canonical]").length == 0) {
                    $("head").append("<link rel=\"canonical\" href=\"http://" + window.location.hostname + url + "\">");
                }
            },

            addAmpLink: function addAmpLink(url) {
                if ($("link[rel=amphtml]").length == 0) {
                    $("head").append("<link rel=\"amphtml\" href=\"http://" + window.location.hostname + url + "/amp\">");
                }
            },

            addMetaRobots: function addMetaRobots() {
                if ($("meta[name=robots]").length == 0) {
                    $("head").append("<meta name=\"robots\" content=\"noindex, follow\">");
                }
            }
        });

        return Misc;
    }();

    var Cookies = function () {
        "use strict";

        function Cookies(o) {
            this.msgcookieSelector = "#msg-cookie";
            this.cssClassWith = "with-cookie";
            this.utils = new Utils();

            o = o || {};
            o = o.Cookies || o;
            $.extend(this, o);
        }
        // return de cookie messaje html
        var buildMessage = function () {
            var msghtml = '<div class="container-fluid msg-cookie" id="msg-cookie">';
            msghtml += '<div class="wrap"><div class="row center-xs">';
            msghtml += '<div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 ">';
            msghtml += "<p>Este sitio web utiliza cookies propias y de terceros, t&eacute;cnicas, anal&iacute;ticas y publicitarias. Si contin&uacute;as navegando, consideramos que aceptas su uso. Si quieres, puedes cambiar tus preferencias o ";
            msghtml += '<a class="a2" href="http://www.rba.es/general/aviso-legal-revistas_177" target="_blank">ampliar esta informaci&oacute;n.</a>';
            msghtml += "</p>";
            msghtml += "</div>";
            msghtml += '<div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 ">';
            msghtml += '<a class="a1" id="hide-msg-cookie" href="#"><i class="fa fa-times" aria-hidden="true"></i></a>';
            msghtml += "</div></div></div>";
            msghtml += "</div>";

            return msghtml;
        }
        // set the navigation cookie
        var defineNavigationCookie = function (CookieManager) {
            $(CookieManager.msgcookieSelector).hide();
            $("body").removeClass(CookieManager.cssClassWith);
            CookieManager.utils.setCookie("msg", "hide");
        }

        $.extend(Cookies.prototype, {
            init: function () {
                log("Mangiro.Cookies > initializing cookies msg");
                var that = this;

                if (!that.utils.getCookie("msg")) {
                    log("Mangiro.Cookies > showing cookies msg");
                    that.utils.setCookie("msg", "show", 0.042);
                    $("body").addClass(that.cssClassWith);
                    $("body").prepend(buildMessage());
                }
                else if (that.utils.getCookie("msg") == "show") {
                    defineNavigationCookie(that);
                }

                $("#hide-msg-cookie").on('click.mangiro.legal', function () {
                    defineNavigationCookie(that);
                    return false;
                });
            },
            infiniteScrollCookie: function () {
                var that = this;
                if (that.utils.getCookie("msg") == "show") {
                    defineNavigationCookie(that);
                }
            }
        });

        return Cookies;
    }();

    var ScrollTop = function () {
        "use strict";

        function ScrollTop(o) {
            this.offset = 100;
            this.duration = 300;
        }
        // Private
        var $window = $(window);
        //
        $.extend(ScrollTop.prototype, {
            init: function () {
                var that = this;
                $window.scroll(function () {
                    if ($(this).scrollTop() > that.offset) {
                        $('.backToTop').fadeIn(that.duration);
                    } else {
                        $('.backToTop').fadeOut(that.duration);
                    }
                });

                $('.backToTop').click(function (event) {
                    event.preventDefault();
                    if (typeof mgr.MGRScroll !== "undefined") {
                        $('html, body').animate({ scrollTop: 0 },
                            {
                                duration: that.duration,
                                start: function () {
                                    mgr.MGRScroll.toggleAttach();
                                },
                                step: function () {
                                    mgr.MGRScroll.loadFirstArticle();
                                },
                                done: function () {
                                    mgr.MGRScroll.toggleAttach();
                                }
                            }
                        );
                    } else {
                        $('html, body').animate({ scrollTop: 0 }, that.duration);
                    }

                    return false;
                })
            }
        });

        return ScrollTop;
    }();

    var Mangiro = function () {
        "use strict";

        var old;
        old = window && window.Mangiro;

        function Mangiro(o) {
            o = o || {};
            window.MGRDEBUG = window.MGRDEBUG || o.debug || false;
            this.skinDetector = new SkinDetector(o.SkinDetector);
            this.scrollDetector = new ScrollDetector(o.ScrollDetector);
            this.utils = new Utils(o.Utils);
            this.ws = new WebService(o.WebService);
            this.social = new Social(o.Social);
            this.misc = new Misc(o.Misc);
            this.cookie = new Cookies(o.Cookies);
            this.scrolltop = new ScrollTop(o.ScrollTop);
            this.dataLayerEvents = new DataLayerEvents();
        }

        Mangiro.noConflict = function noConflict() {
            window && (window.Mangiro = old);
            return Mangiro;
        };

        return Mangiro;
    }();

    window.MGR = Mangiro;
    window.log = log;

    return Mangiro;
});