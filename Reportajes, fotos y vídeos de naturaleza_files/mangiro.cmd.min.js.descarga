(function (root, factory) {
    if (typeof define === "function" && define.amd) {
        define("mangiro.cmd", ["jquery"], function (a0) {
            return factory(a0);
        });
    } else if (typeof exports === "object") {
        module.exports = factory(require("jquery"));
    } else {
        factory(jQuery);
    }
})(this, function ($) {

    log = window.log || function () { };

    var MgrCmd = function () {
        "use strict";

        MgrCmd.prototype.commands = [];
        MgrCmd.prototype.running = false;

        // Constructor
        function MgrCmd(commands) {
            var _this = this;
            if (typeof commands !== "undefined") {
                // argument must be an array of functions
                commands.forEach(function (cmd) {
                    if (typeof cmd === "function")
                        _this.push(cmd);
                });
            } else {
                this.commands = [];
            }
        };

        // Push a command into the array and prepares it to autorun
        MgrCmd.prototype.push = function (cmd) {
            var _this = this;
            // add command to the array
            this.commands.push(function () {
                var ok = cmd();
                if (typeof ok === "undefined" || ok) {
                    // if comand returns true or if it returns "nothing" (aka "undefined")
                    // keep executing commands
                    _this.runCmd();
                }
            });

            if (!this.running) {
                // if nothing running, start executing
                this.runCmd();
            }

            return this; // for chaining pushes!
        };

        // Executes the first command and removes it from the array.
        MgrCmd.prototype.runCmd = function () {
            this.running = false;
            // get (and remove) the first element from the array
            var cmd = this.commands.shift();
            if (cmd) {
                // execute command
                this.running = true;
                cmd();
            }
        };

        return MgrCmd;

    }();

    var Mangiro = window.MGR || {};
    Mangiro.cmd = MgrCmd;

    return Mangiro.cmd;

});