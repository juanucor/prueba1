(function (root, factory) {
	if (typeof define === "function" && define.amd) {
		define("mangiro.cmp", ["mangiro"], function (a0, a1) {
			return factory(a0, a1);
		});
	} else if (typeof exports === "object") {
		module.exports = factory(require("mangiro"));
	} else {
        factory( Mangiro);
	}
})(this, function (Mangiro) {

    log = window.log || function () { };

	var MGRCmp = function () {
		"use strict";

        log("Mangiro.CMP > Loading CMP...");

		function MGRCmp(o) {
			o = o || {};

            this.config = {
                'Publisher Name': o.config['Publisher Name'] || 'National Geographic',
                'Publisher Logo': o.config['Publisher Logo'] || 'http://www.nationalgeographic.com.es/Content/img/logo-ng18-big.svg',
                'Publisher Purpose IDs': o.config['Publisher Purpose IDs'] || [1, 2, 3, 4, 5],
                'Min Days Between UI Displays': o.config['Min Days Between UI Displays'] || 365,
                'Consent Scope': 'service',
                'No Option': false,
                'Display Persistent Consent Link': o.config['Display Persistent Consent Link'] || false,
                'Default Value for Toggles': o.config['Default Value for Toggles'] || 'on',
                'Language': o.config['Language'] || 'es',
                'Initial Screen Title Text': o.config['Initial Screen Title Text'] || 'Tu privacidad es importante para nosotros',
                'Initial Screen Reject Button Text': o.config['Initial Screen Reject Button Text'] || 'No acepto',
                'Initial Screen Accept Button Text': o.config['Initial Screen Accept Button Text'] || 'Acepto',
                'Initial Screen Purpose Link Text': o.config['Initial Screen Purpose Link Text'] || 'Más información',
                'Purpose Screen Title Text': o.config['Purpose Screen Title Text'] || 'Tu privacidad es importante para nosotros',
                'Purpose Screen Header Title Text': o.config['Purpose Screen Header Title Text'] || 'Configuración de privacidad',
                'Purpose Screen Body Text': o.config['Purpose Screen Body Text'] || 'Puedes configurar tus preferencias y elegir como quieres que tus datos sean utilizados para los siguientes propósitos. Puedes elegir configurar tus preferencias solo con nosotros independientemente del resto de nuestros partners. Cada propósito tiene una descripción para que puedas saber como nosotros y nuestros partners utilizamos tus datos.',
                'Purpose Screen Enable All Button Text': o.config['Purpose Screen Enable All Button Text'] || 'Habilitar todo',
                'Purpose Screen Vendor Link Text': o.config['Purpose Screen Vendor Link Text'] || 'Ver lista completa de partners',
                'Purpose Screen Cancel Button Text': o.config['Purpose Screen Cancel Button Text'] || 'Cancelar',
                'Purpose Screen Save and Exit Button Text': o.config['Purpose Screen Save and Exit Button Text'] || 'Guardar y salir',
                'Vendor Screen Title Text': o.config['Vendor Screen Title Text'] || 'Tu privacidad es importante para nosotros',
                'Vendor Screen Body Text': o.config['Vendor Screen Body Text'] || 'Puedes dar tu consentimiento de manera individual a cada partner. Ver la lista de todos los propósitos para los cuales utilizan tus datos para tener más información. En algunos casos, las empresas pueden revelar que usan tus datos sin pedir tu consentimiento, en función de intereses legítimos. Puedes hacer click en su política de privacidad para obtener más información al respecto o para rechazarlo.',
                'Vendor Screen Accept All Button Text': o.config['Vendor Screen Accept All Button Text'] || 'Aceptar todo',
                'Vendor Screen Reject All Button Text': o.config['Vendor Screen Reject All Button Text'] || 'Rechazar todo',
                'Vendor Screen Purposes Link Text': o.config['Vendor Screen Purposes Link Text'] || 'Ver propósitos',
                'Vendor Screen Cancel Button Text': o.config['Vendor Screen Cancel Button Text'] || 'Cancelar',
                'Vendor Screen Save and Exit Button Text': o.config['Vendor Screen Save and Exit Button Text'] || 'Guardar y salir',
                'Initial Screen Body Text': o.config['Initial Screen Body Text'] || 'Tanto nuestros partners como nosotros utilizamos cookies en nuestro sitio web para personalizar contenido y publicidad, proporcionar funcionalidades a las redes sociales, o analizar nuestro tráfico. Haciendo click consientes el uso de esta tecnología en nuestra web. Puedes cambiar de opinión y personalizar tu consentimiento siempre que quieras volviendo a esta web.',
                'Initial Screen Body Text Option': o.config['Initial Screen Body Text Option'] || 1,
                'UI Layout': o.config['UI Layout'] || 'banner'
            };

		}

		// Private zone
        var mgrUtils;
        var eventInit;
        var eventCb;
        var consentFullData = {};
        var consentVendorById = 0;
        var consentPublisher;
        var Gfullconsent = { created: null, lastUpdated: null, consentValue: 1 };
        var Gconsent = 1; // google yes; 
        var CSconsent = 1; // comscore yes

        var notifyPVwithConsent = function () {

            window["dataLayer"][0].userConsentGDPR = CSconsent;
        
        };

        var notifyPVvirtual = function () {
            if (CSconsent === 0) {
                dataLayer.push({ 'event': 'CSpageview', 'eventLabel': CSconsent });
            }
        };
        // Comscore
        var getComscoreConsent = function () {
            return CSconsent;
        };
        var setComscoreConsent = function (callback) {
            //
            // 77 = Comscore in default vendorlist
            //
            return window.__cmp('getCurrentVendorConsents', [77], function (result) {
                if (Object.keys(result.vendorConsents).length > 0) {
                    var vendors = result.vendorConsents;
                    var keys = [77];
                    for (var i = 0; i < keys.length; i++) {
                        var key = keys[i];
                        if (vendors.hasOwnProperty(key)) {
                            if (vendors[key] === true) {
                                if (typeof dataLayer !== "undefined") {
                                    // comscore yeah
                                    CSconsent = 1;
                                    return callback();
                                }
                            } else {
                                if (typeof dataLayer !== "undefined") {
                                    // comscore nop
                                    CSconsent = 0;
                                    return callback();
                                }
                            }
                        }
                    }
                }
            });
        };
        // Google
        var getGoogleConsent = function () {
            return Gconsent;
        };
        var setGoogleConsent = function (callback) {
            //
            // Custom call to google consent
            //
            var gcookie = mgrUtils.getCookie("googlepersonalization");
            if (gcookie !== null) {
                var n = fromWebSafeBase64(gcookie);
                var t = bytesToBinary(n);
                Gfullconsent = decodeBinary(t);
                Gconsent = Gfullconsent.consentValue;
            } 
            return callback();
        };

        // # google cookie stuff
        var dateFromDeciseconds = function (e) {
            return new Date(100 * e);
        };
        var fromWebSafeBase64 = function (e) {
            return atob(e.replace(/-/g, "+").replace(/_/g, "/"))
        };
        var bytesToBinary = function (e) {
            for (var n = "", t = ["0000", "0001", "0010", "0011", "0100", "0101", "0110", "0111", "1000", "1001", "1010", "1011", "1100", "1101", "1110", "1111"], i = function (e) {
                return t[e >>> 4 & 15] + t[15 & e];
            }, o = 0; o < e.length; o++)
                n += i(e.charCodeAt(o));
            return {
                string: n,
                atPos: 0,
                getBits: function (e) {
                    var n = parseInt(this.string.substr(this.atPos, e), 2);
                    return this.atPos += e,
                        n;
                }
            };
        };
        var decodeBinary = function (e) {
            var n = { created: 36, lastUpdated: 36, consentValue: 1 }; //this.fieldSizes
            return {
                created: dateFromDeciseconds(e.getBits(n.created)),
                lastUpdated: dateFromDeciseconds(e.getBits(n.lastUpdated)),
                consentValue: e.getBits(n.consentValue)
            };
        };
        // # google cookie stuff

        var initCMP = function () {
            if (mgrUtils.getCookie("euconsent") === null) { // first time
                document.dispatchEvent(eventInit); 
            } else {
                setComscoreConsent(function () {
                    setGoogleConsent(function () {
                        document.dispatchEvent(eventInit);
                    });
                });
            }
            
        };

        var callbackCMP = function (result) {
            eventCb.detail.reason = result.reason;
            eventCb.detail.uiShown = result.uiShown;
            if (result.uiShown) { // first time
                if (typeof window.__cmpui !== "undefined") {
                    var fullconsent = window.__cmpui("getConsentInfo");
                    // 77 = Comscore in default vendorlist
                    CSconsent = fullconsent.vendorConsents[77] ? 1 : 0;
                    Gconsent = fullconsent.googlePurposeConsents ? 1 : 0;
                }
                document.dispatchEvent(eventCb);
            } else {
                document.dispatchEvent(eventCb);
            }
            
            
        };

        // Get the full consent data
        var getConsentFull = function () {
            if (window.__cmp) {
                window.__cmp('getCurrentVendorConsents', null, function (result) {
                    consentFullData = result;
                });
            }
            return consentFullData;
        };

        // Get consent by id checking if all are set to true
        // all ids are true return 0
        // one or more ids are false return 1
        var getVendorConsentById = function (ids = null) {
            if (window.__cmp) {
                window.__cmp('getCurrentVendorConsents', ids, function (result) {
                    if (Object.keys(result.vendorConsents).length > 0) {
                        var vendors = result.vendorConsents;
                        var key;
                        for (key in vendors) {
                            if (vendors.hasOwnProperty(key)) {
                                if (vendors[key] === true) {
                                    consentVendorById = 1; // yes
                                } else {
                                    consentVendorById = 0; // no
                                    break;
                                }
                            }
                        }
                    }
                });
            }
            return consentVendorById;
        };

        // Get consent by id checking if all are set to true
        // all ids are true return 0
        // one or more ids are false return 1
        var getPublisherConsentById = function (ids = null) {
            if (window.__cmp) {
                window.__cmp('getCurrentPublisherConsents', ids, function (result) {
                    consentPublisher = result.standardPurposeConsents;
                });
            }
            return consentPublisher;
        };

		// Public zone
		MGRCmp.prototype.start = function () {
				//Start the magic
				mgrUtils = new Mangiro().utils;
                eventInit = new CustomEvent("mgr-cmp-loaded", { "detail": "Mangiro CMP Loaded" });
                eventCb = new CustomEvent("mgr-cmp-callback", {
                    "detail": {
                        name: "Mangiro CMP CallBack", 
                        reason: "",
                        uiShown: !0 
                    }
                });

                window.__cmp('init', this.config);
                // Bind the callback
                window.__cmp('setConsentUiCallback', callbackCMP);
                // Define the consent on init
                window.__cmp('ping', null, initCMP);
        };

        MGRCmp.prototype.getCookieValue = function () {
            return window.__cmp && !mgrUtils.getCookie("euconsent");
        };

        MGRCmp.prototype.getFullConsent = function () {

            return getConsentFull();
        };

        MGRCmp.prototype.getVendorConsentById = function (ids) {
            //
            // ID vendors in the global vendorlist
            //
            return getVendorConsentById(ids);
        };

        MGRCmp.prototype.getPublisherConsentById = function (ids) {
            //
            // ID purposes from 1 to 5
            //
            return getPublisherConsentById(ids);
        };

        MGRCmp.prototype.getComscoreConsent = function () {
            return getComscoreConsent();
        };

        MGRCmp.prototype.getGoogleConsent = function () {
            return getGoogleConsent();
        };

        MGRCmp.prototype.notifyPVwithConsent = function () {
            notifyPVwithConsent();
        };

        MGRCmp.prototype.notifyPVvirtual = function () {
            notifyPVvirtual();
        };

		return MGRCmp;
	}();

	var Mangiro = window.MGR || {};
	Mangiro.MGRCmp = MGRCmp;

	return Mangiro.MGRCmp;
    });
